using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class FootstepAudioComponent : MonoBehaviour {
    // Simple audio script for character footstep sounds
    // Useful for 3D spatialized footstep sounds on first person characters

    // Works by attaching audio sources to each foot object
    // Then plays the footstep sound alternating between foots at a set interval

    // Usage:
    // - Attach this script to any object (preferably a game character)
    // - Assign the footstep sound effect to the FootstepSFX field
    // - Assign the left and right foot transforms to the LeftFoot and RightFoot fields
    // - Adjust the FootstepInterval and FootstepVolume fields as needed
    // - Adjust the feet transform positions to match the character's feet positions, so audio is spatialized correctly

    // Note: It might be useful to crete a reusable prefab for the footstep audio sources, and place it as a child of game characters.
    // This way the audio sources follow the characters, but won't interfere with other character logic.

    [Tooltip("Interval in seconds between each footstep sound")]
    public float FootstepInterval = 0.5f;
    [Tooltip("Volume of the footstep sounds")]
    public float FootstepVolume = 1f;
    [Tooltip("Audio clip to use for the footstep sounds")]
    public AudioClip FootstepSFX;
    [Tooltip("Transform for the left foot")]
    public Transform LeftFoot;
    [Tooltip("Transform for the right foot")]
    public Transform RightFoot;

    private AudioSource leftFootAudioSource;
    private AudioSource rightFootAudioSource;
    private Coroutine footstepCoroutine;
    private float lastFootstepTime = -1f;
    private bool IsRightFoot = true;

    private void Start() {
        // Add footstep audio sources to each foot transform
        leftFootAudioSource = LeftFoot.gameObject.AddComponent<AudioSource>();
        rightFootAudioSource = RightFoot.gameObject.AddComponent<AudioSource>();
        // Init the audio sources
        leftFootAudioSource.clip = FootstepSFX;
        rightFootAudioSource.clip = FootstepSFX;
        leftFootAudioSource.spatialBlend = 1;
        rightFootAudioSource.spatialBlend = 1;
        leftFootAudioSource.volume = FootstepVolume;
        rightFootAudioSource.volume = FootstepVolume;
        leftFootAudioSource.loop = false;
        rightFootAudioSource.loop = false;
    }

    public void OnMovementStarted() {
        // Start the footstep coroutine if it's not already running
        if (footstepCoroutine == null) {
            footstepCoroutine = StartCoroutine(PlayFootstepSound());
        }
    }

    public void OnMovementStopped() {
        // Stop the footstep coroutine
        if (footstepCoroutine != null) {
            StopCoroutine(footstepCoroutine);
            footstepCoroutine = null;
        }
    }

    private IEnumerator PlayFootstepSound() {
        while (true) {
            // Check if enough time has passed since the last footstep sound
            if (lastFootstepTime < 0 || Time.time - lastFootstepTime >= FootstepInterval) {
                // Alternate between left and right foot
                if (IsRightFoot) {
                    rightFootAudioSource.Play();
                } else {
                    leftFootAudioSource.Play();
                }

                // Toggle the foot
                IsRightFoot = !IsRightFoot;

                // Update the last footstep time
                lastFootstepTime = Time.time;
            }

            // Wait for the footstep interval before playing the next sound
            yield return new WaitForSeconds(FootstepInterval);
        }
    }
}
